import mongoose from "mongoose";
import {
  arrayObjectId,
  dataDate,
  dataId,
  dataMapObjectId,
  dataMapString,
  dataNumber,
  dataNumberReq,
  dataString,
  getDefaultBoolean,
} from "../controllers/setup";
import { boyZoneLadyZoneStates } from "./interface";

const campSchema = new mongoose.Schema({
  nameId: dataId,
  round: dataNumberReq,
  dateStart: dataDate,
  dateEnd: dataDate,
  boardIds: arrayObjectId,
  peeIds: arrayObjectId,
  nongIds: arrayObjectId,
  partIds: arrayObjectId,
  petoIds: arrayObjectId,
  authorizeIds: arrayObjectId,
  nongDataLock: getDefaultBoolean(false),
  nongModelIds: arrayObjectId,
  peeModelIds: arrayObjectId,
  petoModelIds: arrayObjectId,
  nongPendingIds: dataMapString,
  nongPassIds: dataMapString,
  open: {
    type: Boolean,
    default: false,
  },
  peePassIds: dataMapObjectId,
  songIds: arrayObjectId,
  nongSureIds: arrayObjectId,
  baanIds: arrayObjectId,
  link: {
    type: String,
    default: null,
  },
  allDone: getDefaultBoolean(false),
  lockChangePickup: {
    type: Boolean,
    default: false,
  },
  pictureUrls: {
    type: [String],
    default: [],
  },
  campStyleId: {
    type: mongoose.Schema.ObjectId,
  },
  nongPaidIds: arrayObjectId,
  nongInterviewIds: dataMapString,
  registerModel: {
    type: String,
    enum: ["noPaid", "noInterview", "all"],
    required: true,
  },
  lostAndFoundIds: arrayObjectId,
  memberStructure: {
    type: String,
    enum: [
      "nong->highSchool,pee->1year,peto->2upYear",
      "nong->highSchool,pee->2upYear",
      "nong->1year,pee->2upYear",
      "nong->highSchool,pee->allYear",
      "allYearMix",
    ],
    required: true,
  },
  logoUrl: {
    type: String,
    default: null,
  },
  mapCampMemberCardIdByUserId: dataMapObjectId,
  peeLock: getDefaultBoolean(false),
  registerSheetLink: {
    type: String,
    default: null,
  },
  outRoundIds: arrayObjectId,
  campName: dataString,
  nongSleepModel: {
    type: String,
    enum: ["นอนทุกคน", "เลือกได้ว่าจะค้างคืนหรือไม่", "ไม่มีการค้างคืน"],
    required: true,
  },
  peeSleepModel: {
    type: String,
    enum: ["นอนทุกคน", "เลือกได้ว่าจะค้างคืนหรือไม่", "ไม่มีการค้างคืน"],
    required: true,
  },
  groupRefMap: dataMapObjectId,
  baanBoardId: {
    type: mongoose.Schema.ObjectId,
  },
  partNameIds: arrayObjectId,
  ready: {
    type: [
      {
        type: String,
        enum: [
          "A",
          "B",
          "C",
          "Dog",
          "E",
          "F",
          "G",
          "H",
          "J",
          "K",
          "L",
          "M",
          "N",
          "P",
          "Q",
          "R",
          "S",
          "T",
        ],
      },
    ],
    default: [],
  },
  partBoardId: {
    type: mongoose.Schema.ObjectId,
  },
  partPeeBaanId: {
    type: mongoose.Schema.ObjectId,
  },
  groupName: {
    type: String,
    default: "บ้าน",
  },
  peeDataLock: getDefaultBoolean(false),
  petoDataLock: getDefaultBoolean(false),
  haveCloth: getDefaultBoolean(true),
  actionPlanOffset: dataNumber,
  nongMapIdLtoG: dataMapObjectId,
  peeMapIdLtoG: dataMapObjectId,
  nongMapIdGtoL: {
    type: Map,
    default: new Map(),
    of: Number,
  },
  peeMapIdGtoL: {
    type: Map,
    default: new Map(),
    of: Number,
  },
  currentNong: dataNumber,
  currentPee: dataNumber,
  mdTime: {
    type: Date,
    default: new Date(Date.now()),
  },
  allPetoChatIds: arrayObjectId,
  choiceQuestionIds: arrayObjectId,
  textQuestionIds: arrayObjectId,
  nongAnswerPackIds: arrayObjectId,
  peeAnswerPackIds: arrayObjectId,
  mapAnswerPackIdByUserId: dataMapObjectId,
  peeAnswerIds: arrayObjectId,
  showCorrectAnswerAndScore: getDefaultBoolean(false),
  canAnswerTheQuestion: getDefaultBoolean(false),
  mealIds: arrayObjectId,
  canNongSeeAllAnswer: getDefaultBoolean(false),
  canNongSeeAllActionPlan: getDefaultBoolean(false),
  canNongSeeAllTrackingSheet: getDefaultBoolean(false),
  canNongAccessDataWithRoleNong: getDefaultBoolean(false),
  lockChangeQuestion: getDefaultBoolean(false),
  jobIds: arrayObjectId,
  canReadTimeOnMirror: getDefaultBoolean(false),
  nongCall: {
    type: String,
    default: "น้องค่าย",
  },
  boyZoneLadyZoneState: {
    type: String,
    default: "ปิดสมบูรณ์",
    enum: boyZoneLadyZoneStates,
  },
  itemIds: arrayObjectId,
  canNongSeeBaanOrder: getDefaultBoolean(false),
  scoreIds: arrayObjectId,
});
export default mongoose.model("Camp", campSchema);
